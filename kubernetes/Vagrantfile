# -*- mode: ruby -*-
# vi: set ft=ruby :

#
#	Ubuntu Xenial 64-bit Linux mit Docker
#

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"

  # resize hd, need a plugin vagrant-disksize, see https://github.com/sprotheroe/vagrant-disksize
  # config.disksize.size = '30GB'

  # Create forwarded port mapping which allows access to a specific port
  # kubectl api port
  # config.vm.network "forwarded_port", guest:8443, host:8443, auto_correct: false
  # minikube dashboard port
  # config.vm.network "forwarded_port", guest:30000, host:30000, auto_correct: false
    
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.hostname = "kube"
  config.vm.network "private_network", ip:"192.168.99.100"

  # Public IP
  # config.vm.network "public_network", ip: "10.1.66.12"
  # default router TBZ.
  # config.vm.provision "shell",
  #   run: "always",
  #  inline: "route add default gw 10.1.66.254 enp0s8"
      
  config.vm.provider "virtualbox" do |vb|
     vb.memory = "2048"
  end

  # Docker Provisioner
  config.vm.provision "docker" do |d|
  end
  
config.vm.provision "shell", inline: <<-SHELL 
    # Debug ON!!!
    set -o xtrace
    
	# install kubernetes    
	curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube
	curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl
	
	export MINIKUBE_WANTUPDATENOTIFICATION=false
	export MINIKUBE_WANTREPORTERRORPROMPT=false
	export MINIKUBE_HOME=/home/vagrant
	export CHANGE_MINIKUBE_NONE_USER=true
	mkdir $MINIKUBE_HOME/.kube || true
	touch $MINIKUBE_HOME/.kube/config
	
	export KUBECONFIG=$MINIKUBE_HOME/.kube/config
	sudo -E ./minikube start --vm-driver=none
	
	# this for loop waits until kubectl can access the api server that Minikube has created
	for i in {1..150}; do # timeout for 5 minutes
	   ./kubectl get po &> /dev/null
	   if [ $? -ne 1 ]; then
	      break
	  fi
	  sleep 2
	done
	
	# kubectl commands are now able to interact with Minikube cluster   
	sudo mv kubectl minikube /usr/local/bin 
	sudo chown -R vagrant:vagrant /home/vagrant/.kube /home/vagrant/.minikube

SHELL
end
